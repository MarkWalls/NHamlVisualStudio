// NHamlLanguagePackage.idl : IDL source for NHamlLanguagePackage
//

// This file will be processed by the MIDL tool to
// produce the type library (NHamlLanguagePackage.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

// from visual studio sdk 
// must make sure the interfaces/classes aren't registered to this type lib
#define VS_PACKAGE_INCLUDE 1
import "singlefileeditor.idl";
import "containedlanguage.idl";

interface INHamlPackage;
interface INHamlLanguage;
interface INHamlSource;

interface ILanguageSupervisor;
interface ISourceSupervisor;
interface ISourceSupervisorEvents;

typedef struct _SOURCEMAPPING
{
    long start1;
    long end1;
    long start2;
    long end2;
} SourceMapping;



typedef struct _SOURCEPAINTING
{
    long start;
    long end;
	int color;
} SourcePainting;


[
	object,
	uuid(e162798c-580d-4c06-86f4-218119ffabb1),
	helpstring("INHamlPackage Interface"),
	pointer_default(unique)
]
interface INHamlPackage : IUnknown
{
};

[
	object,
	uuid(22a05037-36fd-441b-9073-002c8c5b55e1),
	helpstring("INHamlLanguage Interface"),
	pointer_default(unique)
]
interface INHamlLanguage : IUnknown
{
	HRESULT SetSupervisor([in] ILanguageSupervisor* pSupervisor);
	HRESULT GetSupervisor([out, retval] ILanguageSupervisor** ppSupervisor);

	HRESULT GetSource([in] IVsTextBuffer* pBuffer, [out] INHamlSource** ppSource);
};

// language service id - (consider - use INHamlLanguage for service id symbol?)
[uuid(d69e4857-0cd5-41f3-91c9-bbf9d89ccbf6)]
interface NHamlLanguageService : IUnknown {};


[
	object,
	uuid(226bd6da-2ebe-4410-ab22-03daac4fbe9b),
	helpstring("INHamlSource Interface"),
	pointer_default(unique)
]
interface INHamlSource : IUnknown
{	
	// association with managed supervisor
	HRESULT SetSupervisor([in] ISourceSupervisor* pSupervisor);
	HRESULT GetSupervisor([out, retval] ISourceSupervisor** ppSupervisor);

	// access various objects related to the source
	HRESULT GetIntellisenseProjectManager([out, retval] IVsIntellisenseProjectManager** ppProjectManager);
	HRESULT GetContainedLanguage([out, retval] IVsContainedLanguage** ppContainedLanguage);
	HRESULT GetTextBufferCoordinator([out, retval] IVsTextBufferCoordinator** ppCoordinator);
	HRESULT GetDocument([out] IVsHierarchy** ppHierarchy, [out] VSITEMID* pItemId, [out] IVsTextLines** pBuffer);
	
	// called to get text of the primary buffer
	HRESULT GetPrimaryText([out, retval] BSTR* pText);

	// called when compiling to return any document's full text (for shared, partials, etc.)
	HRESULT GetRunningDocumentText([in] BSTR CanonicalName, [out, retval] BSTR* pText);

	// called by colorizer to pick up most recent paint that was cached
	HRESULT GetPaint([out] long* cPaint, [out, size_is(,*cPaint)] SourcePainting** prgPaint);

	HRESULT GetDefaultPageBaseType([out, retval] BSTR* pPageBaseType);
};


[
	object,
	uuid(c30c3f1b-4df2-4169-a83c-41e3905a3098),
	helpstring("ILanguageSupervisor Interface"),
	pointer_default(unique)
]
interface ILanguageSupervisor : IUnknown
{
	HRESULT OnSourceAssociated([in] INHamlSource* pSource);
};




[
	object,
	uuid(44441712-de0c-4f4b-b0f0-4244cb69cabd),
	helpstring("ISourceSupervisor Interface"),
	pointer_default(unique)
]
interface ISourceSupervisor : IUnknown
{
	HRESULT Advise([in] ISourceSupervisorEvents* pEvents, [out] DWORD* pdwCookie);
	HRESULT Unadvise([in] DWORD pdwCookie);

	HRESULT PrimaryTextChanged([in] BOOL processImmediately);
	HRESULT OnTypeChar([in] IVsTextView* pView, [in] BSTR ch);
};

[
	object,
	uuid(7cf10c9a-33d8-4d3e-a166-7a472c8caeaf),
	helpstring("ISourceSupervisor Interface"),
	pointer_default(unique)
]
interface ISourceSupervisorEvents : IUnknown
{
	HRESULT OnGenerated(
		[in] BSTR primaryText, 
		[in] BSTR secondaryText, 
		[in] long cMappings, 
		[in, size_is(cMappings)] SourceMapping *rgSpans,
		[in] long cPaints, 
		[in, size_is(cPaints)] SourcePainting *rgPaints);
};



[
	uuid(b5442924-fb3a-4458-b8a5-a2d049db7cba),
	version(1.0),
	helpstring("NHamlLanguagePackage 1.0 Type Library")
]
library NHamlLanguagePackageLib
{
	interface IVsPackage;
	interface IVsLanguageInfo;
	interface IVsProvideColorableItems;

	interface IProfferService;

	interface ILanguageSupervisor;
	interface ISourceSupervisor;

	interface NHamlLanguageService;

	importlib("stdole2.tlb");
	[
		uuid(129e4f09-abae-4d87-abf3-b8ae192df3c0),
		helpstring("NHamlLanguage Package")
	]
	coclass Package
	{
		[default] interface INHamlPackage;
	};

};
